{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/reclamation/reclamation.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../components/footer/footer.component\";\nimport * as i6 from \"../../components/navbar/navbar.component\";\nfunction Form1Component_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"This field is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Form1Component_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"This field is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Form1Component_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"This field is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Form1Component_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const civ_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", civ_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", civ_r6.title, \" \");\n  }\n}\nfunction Form1Component_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"This field is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Form1Component_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"This field is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let Form1Component = /*#__PURE__*/(() => {\n  class Form1Component {\n    constructor(fb, reclamation, router) {\n      this.fb = fb;\n      this.reclamation = reclamation;\n      this.router = router;\n      this.registerForm = this.fb.group({\n        nom: ['', Validators.required],\n        prenom: ['', Validators.required],\n        date_naissance: ['', [Validators.required, Validators.pattern(/^\\d{2}\\/\\d{2}\\/\\d{4}$/)]],\n        num_CIN: ['', [Validators.required]],\n        RIB: ['', [Validators.required]],\n        civId: [1, Validators.required]\n      });\n      this.isSubmitted = false;\n      this.civilite = [{\n        id: 1,\n        title: 'Single'\n      }, {\n        id: 2,\n        title: 'Maried'\n      }];\n    }\n    ngOnInit() {}\n    onSubmit() {\n      console.log('submitted form', this.registerForm.value, this.registerForm.invalid);\n      this.isSubmitted = true;\n    }\n    Submit() {\n      if (this.registerForm.value.nom !== '' && this.registerForm.value.prenom !== '' && this.registerForm.value.date_naissance !== '' && this.registerForm.value.num_CIN !== '' && this.registerForm.value.RIB !== '') {\n        this.router.navigate(['/form2'], {\n          queryParams: {\n            nom: this.registerForm.value.nom,\n            prenom: this.registerForm.value.prenom,\n            date_naissance: this.registerForm.value.date_naissance,\n            civilite: this.civilite.find(c => c.id === this.registerForm.value.civId)?.title,\n            CIN: this.registerForm.value.num_CIN,\n            RIB: this.registerForm.value.RIB\n          }\n        });\n      }\n    }\n  }\n  Form1Component.ɵfac = function Form1Component_Factory(t) {\n    return new (t || Form1Component)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReclamationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  Form1Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Form1Component,\n    selectors: [[\"app-form1\"]],\n    decls: 37,\n    vars: 17,\n    consts: [[1, \"container\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [1, \"label\"], [\"type\", \"text\", \"formControlName\", \"nom\", 1, \"input\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"prenom\", 1, \"input\"], [\"type\", \"date\", \"formControlName\", \"date_naissance\", 1, \"input\"], [\"formControlName\", \"civId\", 1, \"input\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"num_CIN\", 1, \"input\"], [\"type\", \"text\", \"formControlName\", \"RIB\", 1, \"input\"], [1, \"btn\"], [\"type\", \"submit\", 1, \"button\", 3, \"click\"], [1, \"error\"], [3, \"ngValue\"]],\n    template: function Form1Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function Form1Component_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵtemplate(7, Form1Component_span_7_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n        i0.ɵɵtext(10, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, Form1Component_span_12_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 3);\n        i0.ɵɵtext(15, \"Date of birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵtemplate(17, Form1Component_span_17_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 3);\n        i0.ɵɵtext(20, \"Civility\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 8);\n        i0.ɵɵtemplate(22, Form1Component_option_22_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 2)(24, \"label\", 3);\n        i0.ɵɵtext(25, \"CIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵtemplate(27, Form1Component_span_27_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 2)(29, \"label\", 3);\n        i0.ɵɵtext(30, \"RIB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵtemplate(32, Form1Component_span_32_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 12)(34, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function Form1Component_Template_button_click_34_listener() {\n          return ctx.Submit();\n        });\n        i0.ɵɵtext(35, \"Next\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(36, \"app-footer\");\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_8_0;\n        let tmp_9_0;\n        let tmp_10_0;\n        let tmp_11_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"invalid\", ((tmp_1_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_1_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_2_0.hasError(\"required\")) && (((tmp_2_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.registerForm.get(\"nom\")) == null ? null : tmp_2_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"invalid\", ((tmp_3_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_3_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_4_0.hasError(\"required\")) && (((tmp_4_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.registerForm.get(\"prenom\")) == null ? null : tmp_4_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"invalid\", ((tmp_5_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_5_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_6_0.hasError(\"required\")) && (((tmp_6_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.registerForm.get(\"date_naissance\")) == null ? null : tmp_6_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.civilite);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"invalid\", ((tmp_8_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_8_0.invalid) && (((tmp_8_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_8_0.dirty) || ((tmp_8_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_8_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_9_0.hasError(\"required\")) && (((tmp_9_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_9_0.dirty) || ((tmp_9_0 = ctx.registerForm.get(\"num_CIN\")) == null ? null : tmp_9_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"invalid\", ((tmp_10_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_10_0.invalid) && (((tmp_10_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_10_0.dirty) || ((tmp_10_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_10_0.touched) || ctx.isSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_11_0.hasError(\"required\")) && (((tmp_11_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_11_0.dirty) || ((tmp_11_0 = ctx.registerForm.get(\"RIB\")) == null ? null : tmp_11_0.touched) || ctx.isSubmitted));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.NgForOf, i4.NgIf, i1.FormGroupDirective, i1.FormControlName, i5.FooterComponent, i6.NavbarComponent],\n    styles: [\".container[_ngcontent-%COMP%]{margin-top:15%;display:flex;flex-direction:column;align-items:center;margin-bottom:5%}.form[_ngcontent-%COMP%]{width:50%;background:#fff;padding:5%;border-radius:10px;box-shadow:#0303031a 10px 0 50px}.field[_ngcontent-%COMP%]{margin-bottom:5px}.label[_ngcontent-%COMP%]{margin-bottom:3px;font-size:15px;font-weight:600;color:#777}.input[_ngcontent-%COMP%]{width:100%;padding:15px;border:0;background:#f0f0f0;border-radius:5px;font-size:15px;color:#555;font-weight:600}.btn[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end}.button[_ngcontent-%COMP%]{margin-top:10px;background:#30ae69;color:#fff;font-weight:600;border-radius:5px;cursor:pointer;padding:10px;border:0;font-size:15px}.invalid[_ngcontent-%COMP%]{border:1px solid red}.error[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return Form1Component;\n})();","map":null,"metadata":{},"sourceType":"module"}